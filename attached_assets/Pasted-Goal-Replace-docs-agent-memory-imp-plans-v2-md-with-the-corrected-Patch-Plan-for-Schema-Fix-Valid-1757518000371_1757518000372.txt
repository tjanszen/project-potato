Goal: Replace docs/agent_memory/imp_plans/v2.md with the corrected Patch Plan for Schema Fix & Validation.

Do:
- Overwrite the entire contents of docs/agent_memory/imp_plans/v2.md with exactly the following:

# üõ†Ô∏è Patch Plan: Schema Fix & Validation (v2)

**Goal:**  
Ensure the `day_marks` table schema matches Drizzle definitions. Specifically, correct the column naming mismatch (`date` vs `local_date`) before proceeding with further phases. This patch ensures the application and database stay aligned.

---

## Step 1: Schema Check
- List current DB tables: `\dt`
- Show schema for `day_marks`: `\d+ day_marks`
- Compare against Drizzle‚Äôs `shared/schema.ts`

üëâ **Output:** Confirm mismatch (table has `date`, Drizzle expects `local_date`).

---

## Step 2: Migration Apply
- If mismatch is found, apply safe column rename:
  ALTER TABLE day_marks RENAME COLUMN date TO local_date;
- Verify schema after migration with `\d+ day_marks`
- Confirm no data loss (all rows preserved)

üëâ **Output:** Schema updated, `local_date` column present.

---

## Step 3: Validation
- Retry marking a day:
  curl -X POST http://0.0.0.0:$PORT/api/days/2025-09-08/no-drink \
    -H "Content-Type: application/json" \
    -b test_cookies.txt -c test_cookies.txt -v
- Expect **HTTP 200** response
- Query database:
  SELECT local_date, user_id, value
  FROM day_marks
  ORDER BY local_date DESC
  LIMIT 5;

üëâ **Output:** New row for marked day appears with `local_date=2025-09-08`.

---

## Step 4: Documentation
- Update `bugs_journal.md`:
  - Note that schema mismatch (`date` vs `local_date`) was the true root cause
  - Mark resolved via column rename migration
- Update `playbook.md`:
  - Add rule: *Always validate schema column names against Drizzle before feature rollout*

üëâ **Output:** Durable record of root cause and resolution.

---

## Rollback
If migration introduces issues:
  ALTER TABLE day_marks RENAME COLUMN local_date TO date;

---

## Blast Radius
- **Low** ‚Äî affects only one column name in one table.  
- **Safe** ‚Äî preserves existing rows.  
- **Scoped** ‚Äî does not touch unrelated tables or schema.

Proof:
- File docs/agent_memory/imp_plans/v2.md contains only the updated Patch Plan above.
